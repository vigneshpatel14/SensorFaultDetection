name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-docker-image:
    name: Build and Push Docker Image
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        env:
          IMAGE_TAG: latest
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/your-image-name:$IMAGE_TAG .

      - name: Push Docker Image to Docker Hub
        env:
          IMAGE_TAG: latest
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/your-image-name:$IMAGE_TAG

  continuous-deployment:
    name: Continuous Deployment
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull the Latest Docker Image
        env:
          IMAGE_TAG: latest
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/your-image-name:$IMAGE_TAG

      - name: Run Docker Image
        run: |
          docker run -d -p 8080:8080 --name=sensor \
            -e 'MONGO_DB_URL=${{ secrets.MONGO_DB_URL }}' \
            ${{ secrets.DOCKER_USERNAME }}/your-image-name:latest

      - name: Clean Previous Images and Containers
        run: |
          docker system prune -f

          